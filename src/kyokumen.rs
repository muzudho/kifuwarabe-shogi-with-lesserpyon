//! 局面の実装。

use crate::ISquare;
use crate::Kiki;
use crate::Pin;
use crate::Te;
use crate::TeNum;
use crate::USquare;
use crate::BAN_LEN;
use crate::DIRECT;
use crate::TE_LEN;
use crate::{KomaInf, Kyokumen};
use num_traits::FromPrimitive;

impl Default for Kyokumen {
    fn default() -> Self {
        Kyokumen {
            banpadding: [KomaInf::Wall; 16],
            ban: [KomaInf::EMP; BAN_LEN],
            control_s: [0; BAN_LEN],
            control_e: [0; BAN_LEN],
            hand: [0; KomaInf::EHI as usize + 1 as usize],
            tesu: 0,
            king_s: 0,
            king_e: 0,
            can_move: [
                // DIRECT[0]=17,
                // |／
                //  ￣
                [
                    // 'Cascadia Code' のような 等幅フォント にしても桁揃えがずれるぜ☆（＾～＾）
                    // プロポーショナル・フォントなアルファベットを使う海外に 方眼紙 の文化は無いのだろう☆（＾～＾）
                    // ちょっとずつ だんだんずれてくる……、仕方ない 横幅を長く取って ずれ を目立たなくさせるか……☆（＾～＾）
                    //
                    // 桁揃えって何？　だって☆（＾～＾）！？
                    // おいお前、PC9801 の画面の　漢字とアルファベットが混合しても等幅なのを見てこいだぜ☆ｍ９（＾～＾）！
                    // 暴れたろ☆（＾～＾）！
                    //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    1_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 1_____, 1_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, 1_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=1,
                // ↓
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 1_____, 0_____, 0_____, 1_____, 1_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-15,
                // ＼|
                // ￣
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    1_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 1_____, 1_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, 1_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=16,
                // ←
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-16,
                // →
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=15,
                //  __
                // |＼
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 1_____, 1_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, 1_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    1_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-1,
                // ↑
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 1_____, 0_____, 0_____, 1_____, 1_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-17
                // __
                // ／|
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 1_____, 1_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    1_____, 1_____, 1_____, 1_____, 1_____, 1_____, 0_____, 1_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 1_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    1_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=14,先手の桂馬
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 1_____, 0_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-18,先手の桂馬
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 1_____, 0_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-14,後手の桂馬
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 1_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=18,後手の桂馬
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 1_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
            ],
            // その方向に飛んで動くことが出来るか？
            // 飛車角香車と龍と馬しかそういう駒はない
            can_jump: [
                // DIRECT[0]=17,
                // ＼|
                // ￣
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=1,
                // ↓
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 1_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-15,
                // ＼|
                // ￣
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=16,
                // ←
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-16,
                // →
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=15,
                //  __
                // |＼
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-1,
                // ↑
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 1_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-17
                // __
                // ／|
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 1_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=14,先手の桂馬飛び
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-18,先手の桂馬飛び
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=-14,後手の桂馬飛び
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
                // DIRECT[0]=18,後手の桂馬飛び
                [
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , 空    , 空    , 空     , 空    , 空    , 空    , 空    ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , △歩   , △香   , △桂    , △銀   , △金   , △角   , △飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // △王, △と   , △杏   , △圭    , △全   , △金   , △馬   , △龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // 空 , ▼歩   , ▼香   , ▼桂    , ▼銀   , ▼金   , ▼角   , ▼飛   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼王, ▼と   , ▼杏   , ▼圭    , ▼全   , ▼金   , ▼馬   , ▼龍   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼壁, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                    // ▼空, ▼空   , ▼空   , ▼空    , ▼空   , ▼空   , ▼空   , ▼空   ,
                    0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, 0_____, //
                ],
            ],
        }
    }
}

/// C++からRustに翻訳するときに 可読性が低くなったところに使うぜ☆（＾～＾）  
/// きふわらべのお父ん が追加した☆（＾～＾）  
/// オリジナルの れさぴょん には無いぜ☆（＾～＾）  
impl Kyokumen {
    /// Is enemy.
    pub fn is_e(&self, sq: USquare) -> bool {
        self.ban[sq] & KomaInf::Enemy != KomaInf::EMP
    }
    /// Is intersect enemy.
    pub fn is_control_e(&self, sq: USquare) -> bool {
        self.control_e[sq] != 0
    }
    /// Is intersect self.
    pub fn is_control_s(&self, sq: USquare) -> bool {
        self.control_s[sq] != 0
    }
    /// Exists.
    pub fn is_exists(&self, sq: USquare) -> bool {
        self.ban[sq] != KomaInf::EMP
    }
    /// Exists.
    pub fn is_exists_s_or_e(&self, sq: USquare, s_or_e: KomaInf) -> bool {
        self.ban[sq] & s_or_e != KomaInf::EMP
    }
}

impl Kyokumen {
    pub fn search(&self, mut sq: USquare, dir: ISquare) -> USquare {
        while {
            sq = (sq as ISquare + dir) as USquare;
            !self.is_exists(sq)
        } {}
        return sq;
    }
    // pub Kyokumen() {}
    // pub Kyokumen(int tesu,KomaInf ban[9][9],int Motigoma[]){}
    pub fn print() {
        /*FPrint(stdout);*/
    }
    /*
    pub fn  FPrint(FILE *fp){}
    */
    /// ピン（動かすと王を取られてしまうので動きが制限される駒）の状態を設定する
    pub fn make_pin_inf(&self, pin: &mut Pin) {
        // int i;
        // ピン情報を設定する
        for sq in 0x11..=0x99 {
            // 0はピンされていない、という意味
            pin[sq] = 0;
        }
        if self.king_s != 0 {
            //自玉が盤面にある時のみ有効
            for i in 0..8 {
                let p = self.search(self.king_s, DIRECT[i]);
                if self.ban[p] != KomaInf::Wall && !self.is_e(p) {
                    //味方の駒が有る
                    if (self.control_e[p] & 1 << (16 + i)) != 0 {
                        pin[p] = DIRECT[i];
                    }
                }
            }
        }
        if self.king_e != 0 {
            //敵玉が盤面にある時のみ有効

            for i in 0..8 {
                let p = self.search(self.king_e, -DIRECT[i]);
                if (self.ban[p] != KomaInf::Wall) && self.is_e(p) {
                    //敵の駒が有る
                    if (self.control_s[p] & 1 << (16 + i)) != 0 {
                        pin[p] = DIRECT[i];
                    }
                }
            }
        }
    }

    /// 駒の動きとして正しい動きを全て生成する。
    ///
    /// # Return
    ///
    /// * `usize` - 手目。
    pub fn make_legal_moves(
        &self,
        s_or_e: KomaInf,
        te_buf: &mut [Te; TE_LEN],
        pin: &mut Option<Pin>, /* =NULL */
    ) -> usize {
        let mut te_num = 0;
        let pin = if let None = pin {
            let mut pbuf: [isize; BAN_LEN] = [0; BAN_LEN];
            self.make_pin_inf(&mut pbuf);
            pbuf
        } else {
            pin.unwrap()
        };

        if s_or_e == KomaInf::Self_ && self.is_control_e(self.king_s) {
            return self.anti_check(s_or_e, te_buf, &pin, self.control_e[self.king_s]);
        }
        if s_or_e == KomaInf::Enemy && self.is_control_s(self.king_e) {
            return self.anti_check(s_or_e, te_buf, &pin, self.control_s[self.king_e]);
        }

        // let suji: isize;
        // let dan: isize;
        let mut start_dan: usize;
        let mut end_dan: usize;
        // 盤上の駒を動かす
        for suji in (0x10..=0x90).step_by(0x10) {
            for dan in 1..=9 {
                if self.is_exists_s_or_e(suji + dan, s_or_e) {
                    self.add_moves(
                        s_or_e,
                        &mut te_num,
                        te_buf,
                        (suji + dan) as USquare,
                        pin[suji + dan],
                        0, // rpin
                    );
                }
            }
        }
        // 歩を打つ
        if self.hand[(s_or_e | KomaInf::FU) as usize] > 0 {
            for suji in (0x10..=0x90).step_by(0x10) {
                // 二歩チェック
                let mut nifu = false;
                for dan in 1..=9 {
                    if self.ban[suji + dan] == s_or_e | KomaInf::FU {
                        nifu = true;
                        break;
                    }
                }
                if nifu {
                    continue;
                };
                //(先手なら２段目より下に、後手なら８段目より上に打つ）
                if s_or_e == KomaInf::Self_ {
                    start_dan = 2;
                    end_dan = 9;
                } else {
                    start_dan = 1;
                    end_dan = 8;
                }
                for dan in start_dan..=end_dan {
                    // 打ち歩詰めもチェック
                    if !self.is_exists(dan as usize + suji)
                        && !self.utifudume(s_or_e, (dan as usize + suji) as USquare, &pin)
                    {
                        te_buf[te_num as usize] = Te::from_4(
                            0,
                            (suji + dan as usize) as u8,
                            s_or_e | KomaInf::FU,
                            KomaInf::EMP,
                        );
                        te_num += 1;
                    }
                }
            }
        }
        // 香を打つ
        if self.hand[(s_or_e | KomaInf::KY) as usize] > 0 {
            for suji in (0x10..=0x90).step_by(0x10) {
                //(先手なら２段目より下に、後手なら８段目より上に打つ）
                if s_or_e == KomaInf::Self_ {
                    start_dan = 2;
                    end_dan = 9;
                } else {
                    start_dan = 1;
                    end_dan = 8;
                }
                for dan in start_dan..=end_dan {
                    if !self.is_exists(dan as usize + suji) {
                        te_buf[te_num as usize] = Te::from_4(
                            0,
                            (suji + dan as usize) as u8,
                            s_or_e | KomaInf::KY,
                            KomaInf::EMP,
                        );
                        te_num += 1;
                    }
                }
            }
        }
        //桂を打つ
        if self.hand[(s_or_e | KomaInf::KE) as usize] > 0 {
            //(先手なら３段目より下に、後手なら７段目より上に打つ）
            for suji in (0x10..=0x90).step_by(0x10) {
                if s_or_e == KomaInf::Self_ {
                    start_dan = 3;
                    end_dan = 9;
                } else {
                    start_dan = 1;
                    end_dan = 7;
                }
                for dan in start_dan..=end_dan {
                    if !self.is_exists(dan as usize + suji) {
                        te_buf[te_num as usize] = Te::from_4(
                            0,
                            (suji + dan as usize) as u8,
                            s_or_e | KomaInf::KE,
                            KomaInf::EMP,
                        );
                        te_num += 1;
                    }
                }
            }
        }
        // 銀～飛車は、どこにでも打てる
        for koma in KomaInf::GI as isize..=KomaInf::HI as isize {
            if let Some(koma_inf) = KomaInf::from_isize(koma) {
                if self.hand[(s_or_e | koma_inf) as usize] > 0 {
                    for suji in (0x10..=0x90).step_by(0x10) {
                        for dan in 1..=9 {
                            if !self.is_exists(dan + suji) {
                                te_buf[te_num] = Te::from_4(
                                    0,
                                    (suji + dan) as u8,
                                    KomaInf::from_isize(s_or_e as isize | koma).unwrap(),
                                    KomaInf::EMP,
                                );
                                te_num += 1;
                            }
                        }
                    }
                }
            }
        }

        return te_num;
    }

    /// TODO 王手を受ける手の生成
    ///
    /// # Return
    ///
    /// * `usize` - 手目。
    pub fn anti_check(
        &self,
        s_or_e: KomaInf,
        te_buf: &mut [Te; TE_LEN],
        pin: &Pin,
        kiki: Kiki,
    ) -> usize {
        let king: USquare;
        let mut te_num: TeNum = 0;
        if (kiki & (kiki - 1)) != 0 {
            //両王手は玉を動かすしかない
            self.move_king(s_or_e, &mut te_num, te_buf, kiki);
        } else {
            if s_or_e == KomaInf::Self_ {
                king = self.king_s;
            } else {
                king = self.king_e;
            }
            let check: USquare;
            let mut id: usize = 0;
            while id <= 31 {
                if kiki == (1usize << id) {
                    break;
                }
                id += 1;
            }
            if id < 16 {
                check = (king as ISquare - DIRECT[id]) as USquare;
            } else {
                check = self.search(king, -DIRECT[id - 16]);
            }
            //王手駒を取る
            self.move_to(s_or_e, &mut te_num, te_buf, check, pin);

            //玉を動かす
            self.move_king(s_or_e, &mut te_num, te_buf, kiki);

            if id >= 16 {
                //合駒をする手を生成する
                let mut i: USquare = (king as ISquare - DIRECT[id - 16]) as USquare;
                while !self.is_exists(i) {
                    self.move_to(s_or_e, &mut te_num, te_buf, i, pin); //移動合
                    i = (i as ISquare - DIRECT[id - 16]) as USquare;
                }
                let mut i: USquare = (king as ISquare - DIRECT[id - 16]) as USquare;
                while !self.is_exists(i) {
                    self.put_to(s_or_e, &mut te_num, te_buf, i, pin); //駒を打つ合
                    i = (i as ISquare - DIRECT[id - 16]) as USquare;
                }
            }
        }
        return te_num;
    }

    /// TODO
    pub fn move_(s_or_e: KomaInf, te: &Te) {}

    /// TODO
    fn init_control() {}

    /// TODO
    fn utifudume(&self, s_or_e: KomaInf, to: USquare, pin: &Pin) -> bool {
        false
    }

    /// TODO 玉の動く手の生成
    fn move_king(
        &self,
        s_or_e: KomaInf,
        te_num: &mut TeNum,
        te_top: &mut [Te; TE_LEN],
        kiki: Kiki,
    ) {
    }

    /// TODO toに動く手の生成
    fn move_to(
        &self,
        s_or_e: KomaInf,
        te_num: &mut TeNum,
        te_top: &mut [Te; TE_LEN],
        to: USquare,
        pin: &Pin,
    ) {
    }

    /// TODO toに駒を打つ手の生成
    fn put_to(
        &self,
        s_or_e: KomaInf,
        te_num: &mut TeNum,
        te_top: &[Te; TE_LEN],
        to: USquare,
        pin: &Pin,
    ) {
    }

    /// TODO
    fn count_control_s(sq: ISquare) -> Kiki {
        0
    }

    /// TODO
    fn count_control_e(sq: ISquare) -> Kiki {
        0
    }

    /// TODO
    fn countMove(s_or_e: KomaInf, sq: ISquare, pin: &Pin) -> Kiki {
        0
    }

    /// TODO
    fn add_moves(
        &self,
        s_or_e: KomaInf,
        te_num: &mut TeNum,
        te_top: &mut [Te; TE_LEN],
        from: USquare,
        pin: ISquare,
        r_pin: ISquare, /* =0 */
    ) {
    }

    /// TODO
    fn AddStraight(
        s_or_e: KomaInf,
        te_num: &mut TeNum,
        te_top: &Te,
        from: USquare,
        dir: ISquare,
        pin: ISquare,
        r_pin: ISquare, /* =0 */
    ) {
    }

    /// TODO
    fn AddMove(
        s_or_e: KomaInf,
        te_num: &mut TeNum,
        te_top: &Te,
        from: USquare,
        diff: isize,
        pin: ISquare,
        r_pin: ISquare, /* =0 */
    ) {
    }
}
